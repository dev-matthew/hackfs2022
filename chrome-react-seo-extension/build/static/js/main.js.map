{"version":3,"sources":["../webpack/bootstrap","App.js","index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","this","oldJsonpFunction","slice","WEB3_STORAGE_KEY","NFT_PORT_KEY","wallet","xmtp","activeMessages","myAddress","conversations","sites","App","activeLeft","setActiveLeft","useState","settings","setSettings","localStorage","getItem","passwordNeeded","setPasswordNeeded","includes","progressWidth","setProgressWidth","loadedPeople","setLoadedPeople","loadedSites","setLoadedSites","loadedMessages","setLoadedMessages","currentAddress","setCurrentAddress","currentWebsite","setCurrentWebsite","newConversationPopup","setNewConversationPopup","lookupPopup","setLookupPopup","currentNFTs","setCurrentNFTs","loadingNFTs","setLoadingNFTs","mintingNFTPopup","setMintingNFTPopup","mintStatus","setMintStatus","async","activateWallet","password","Wallet","fromEncryptedJson","e","alert","console","log","reset","activateXMTP","address","Client","allConversations","list","conversation","getAllConversations","sendMessage","message","website","newConversation","send","loadMessageByPerson","messages","getAllMessages","peerAddress","site","content","sender","contents","split","senderAddress","substring","isolateWebsite","URL","host","loadImage","mint","fetch","document","getElementById","method","then","response","json","icons","src","canvas","getElementsByClassName","width","height","clientWidth","clientHeight","context","getContext","clearRect","imageObj1","Image","crossOrigin","onload","drawImage","beginPath","arc","Math","PI","fillStyle","fill","lineWidth","strokeStyle","stroke","imageObj2","url","toBlob","blob","web3StorageClient","Web3Storage","token","file","File","rootCid","put","IPFS_URL","domain","image_url","headers","body","JSON","stringify","handleMint","uploadImage","mintNFT","error","window","className","onClick","id","style","type","autoComplete","placeholder","privateKey","encrypted","encrypt","setItem","handlePrivateKey","chrome","tabs","query","active","currentWindow","onKeyPress","event","nfts","items","nft","nft_data","external_data","getNFTs","map","index","left","top","floor","image","alt","title","color","keys","displayMessages","target","newMessage","createElement","classList","add","innerHTML","appendChild","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = this[\"webpackJsonpchrome-react-seo-extension\"] = this[\"webpackJsonpchrome-react-seo-extension\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([356,0,3]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import './App.css';\nimport {useState} from 'react';\nimport {FiSettings} from 'react-icons/fi';\nimport {IoMdClose} from 'react-icons/io';\nimport {Wallet} from 'ethers';\nimport {Client} from '@xmtp/xmtp-js';\nimport {Web3Storage} from 'web3.storage/dist/bundle.esm.min.js';\n\nconst EXTENSION_NAME = \"Noir\";\nconst COVALENT_KEY = \"ckey_79c997c7e8084e0f9df0af9824c\";\nconst WEB3_STORAGE_KEY = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDY1Nzc1NjBhMjU5ZTVFNkY5ZGY2OUI5MjUzNzg3NjBlM2NiMzE1OTMiLCJpc3MiOiJ3ZWIzLXN0b3JhZ2UiLCJpYXQiOjE2NTgyOTA2ODQwMDYsIm5hbWUiOiJIYWNrRlMyMDIyIn0.pV0ewTBjRB2MVpB8Dkiu8McnSNTCQvVSLeMr8RfVgsM\";\nconst NFT_PORT_KEY = \"ea1e18b5-7e10-4dd5-8354-9198453d55e8\";\nconst CHAIN_ID = 137; //mumbai 80001, polygon 137\n\nvar wallet, xmtp;\nvar conversations = [];\nvar sites = {\"all\": []};\nvar activeMessages;\nvar myAddress;\n\nexport default function App() {\n  const [activeLeft, setActiveLeft] = useState(0);\n  const [settings, setSettings] = useState(localStorage.getItem(\"privateKey\") === null);\n  const [passwordNeeded, setPasswordNeeded] = useState(localStorage.getItem(\"privateKey\") !== null && localStorage.getItem(\"privateKey\").includes(\"cipher\"));\n  const [progressWidth, setProgressWidth] = useState(0);\n  const [loadedPeople, setLoadedPeople] = useState(false);\n  const [loadedSites, setLoadedSites] = useState(false);\n  const [loadedMessages, setLoadedMessages] = useState(false);\n  const [currentAddress, setCurrentAddress] = useState(\"\");\n  const [currentWebsite, setCurrentWebsite] = useState(\"\");\n  const [newConversationPopup, setNewConversationPopup] = useState(false);\n  const [lookupPopup, setLookupPopup] = useState(false);\n  const [currentNFTs, setCurrentNFTs] = useState([]);\n  const [loadingNFTs, setLoadingNFTs] = useState(false);\n  const [mintingNFTPopup, setMintingNFTPopup] = useState(false);\n  const [mintStatus, setMintStatus] = useState(\"Awaiting command...\");\n\n  async function handlePrivateKey(privateKey, password) {\n    try {\n      wallet = new Wallet(privateKey);\n      if (password) {\n        let encrypted = await wallet.encrypt(password, setProgressWidth);\n        localStorage.setItem(\"privateKey\", encrypted);\n        // eslint-disable-next-line\n        //chrome.storage.local.set({\"privateKey\": encrypted}, function() {});\n      } else {\n        localStorage.setItem(\"privateKey\", privateKey);\n        // eslint-disable-next-line\n        //chrome.storage.local.set({\"privateKey\": privateKey}, function() {});\n      }\n      console.log(wallet);\n      reset();\n      await activateXMTP();\n    } catch(e) {\n      alert(\"Invalid private key\");\n    }\n  }\n\n  async function activateWallet(password) {\n    if (password !== \"\") {\n      try {\n        wallet = await Wallet.fromEncryptedJson(localStorage.getItem(\"privateKey\"), password, setProgressWidth);\n      } catch(e) {\n        alert(\"Invalid password\");\n      }\n    } else {\n      wallet = new Wallet(localStorage.getItem(\"privateKey\"));\n    }\n    console.log(wallet);\n    reset();\n    await activateXMTP();\n  }\n\n  async function activateXMTP() {\n    myAddress = wallet.address;\n    xmtp = await Client.create(wallet);\n    console.log(xmtp);\n    await getAllConversations();\n    //await sendMessage(\"0xf82e053D56Ce2feF2EA52d2f120b706A66963327\", \"Hi this is Person 1 speaking\", \"google.com\")\n  }\n\n  async function sendMessage(address, message, website=\"all\") {\n    try {\n      if (website === \"\") {\n        website = \"all\"\n      }\n      let conversation = await xmtp.conversations.newConversation(address);\n      await conversation.send(website + \"////\" + message);\n      console.log(\"Sent message \" + message + \" to \" + address);\n    } catch (e) {\n      alert(\"Address is not on the XMTP network yet\");\n    }\n  }\n\n  async function getAllMessages(address) {\n    let conversation = await xmtp.conversations.newConversation(address);\n    let messages = await conversation.messages();\n    return messages;\n  }\n\n  async function getAllConversations() {\n    let allConversations = await xmtp.conversations.list();\n    for (const conversation of allConversations) {\n      conversations.push(conversation);\n    }\n    setLoadedPeople(true);\n    console.log(conversations);\n  }\n\n  async function loadMessageByPerson(conversation) {\n    sites = {\"all\": []};\n    console.log(conversation);\n    let messages = await getAllMessages(conversation.peerAddress);\n    setCurrentAddress(conversation.peerAddress);\n    console.log(messages);\n    for (const message of messages) {\n      let contents = message.content.split(\"////\");\n      let site, content;\n      if (contents.length > 1) {\n        site = contents[0];\n        content = contents[1];\n      } else {\n        site = \"all\";\n        content = contents[0];\n      }\n\n      let sender;\n      if (message.senderAddress === myAddress) {\n        sender = \"Me - \"\n      } else {\n        sender = message.senderAddress.substring(0, 6) + \"...\" + message.senderAddress.slice(-4) + \" - \";\n      }\n\n      if (site in sites) {\n        sites[site].push(sender + content);\n      } else {\n        sites[site] = [sender + content];\n      }\n      \n      if (site !== \"all\") {\n        sites[\"all\"].push(sender + content);\n      }\n    }\n\n    console.log(sites);\n    setLoadedSites(false);\n    setLoadedSites(true);\n  }\n\n  async function displayMessages(site=\"all\") {\n    activeMessages = sites[site];\n    setCurrentWebsite(site);\n    setLoadedMessages(false);\n    setLoadedMessages(true);\n  }\n\n  function reset() {\n    setPasswordNeeded(false);\n    setSettings(false);\n    setActiveLeft(0);\n    setProgressWidth(0);\n    setNewConversationPopup(false);\n    setLookupPopup(false);\n    setMintingNFTPopup(false);\n    setMintStatus(\"Awaiting command...\");\n  }\n\n  function isolateWebsite(address) {\n    let url = new URL(address);\n    return url.host\n  }\n\n  async function getNFTs(address) {\n    try {\n      //let conversation = await xmtp.conversations.newConversation(address);\n      setLoadingNFTs(true);\n      let nfts = [];\n      fetch(`https://api.covalenthq.com/v1/${CHAIN_ID}/address/${address}/balances_v2/?quote-currency=USD&format=JSON&nft=true&no-nft-fetch=false&key=${COVALENT_KEY}`)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data.data.items);\n          for (let i = 0; i < data.data.items.length; i++) {\n            let nft = data.data.items[i];\n            if (nft.type === \"nft\" && nft.nft_data && nft.nft_data[0].external_data && nft.nft_data[0].external_data.name && nft.nft_data[0].external_data.name.includes(EXTENSION_NAME)) {\n              nfts.push(nft);\n            }\n          }\n          console.log(nfts);\n          setCurrentNFTs(nfts);\n          setLoadingNFTs(false);\n        });\n    } catch (error) {\n      alert(\"User is not on the XMTP network yet\");\n    }\n  }\n\n  function loadImage(mint) {\n    try {\n      fetch(`https://favicongrabber.com/api/grab/${document.getElementById(\"CurrentWebsiteInput\").value}`, {method: \"GET\", mode: \"cors\"})\n      .then(response => response.json())\n      .then(data => {\n        console.log(data.icons[0].src);\n        var canvas = document.getElementsByClassName(\"NFTPreview\")[0];\n        canvas.width = canvas.height * (canvas.clientWidth / canvas.clientHeight);\n        var context = canvas.getContext(\"2d\");\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        var imageObj1 = new Image();\n        imageObj1.src = \"https://i.imgur.com/ZP5RI97.png\";\n        imageObj1.crossOrigin = \"Anonymous\";\n        imageObj1.onload = function() {\n          context.drawImage(imageObj1, -7, -5, 164, 164);\n          context.beginPath();\n          context.arc(76, 76, 42, 0, 2 * Math.PI, false);\n          context.fillStyle = \"white\";\n          context.fill();\n          context.lineWidth = 5;\n          context.strokeStyle = \"white\";\n          context.stroke();\n          var imageObj2 = new Image();\n          imageObj2.src = data.icons[0].src;\n          imageObj2.crossOrigin = \"Anonymous\";\n          imageObj2.onload = function() {\n            context.drawImage(imageObj2, 36, 36, 82, 82);\n            if (mint) {\n              mintNFT(document.getElementById(\"CurrentWebsiteInput\").value);\n            }\n          }\n        }\n      });\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  async function mintNFT(url) {\n    let canvas = document.getElementsByClassName(\"NFTPreview\")[0];\n    canvas.toBlob(function(blob) {\n      uploadImage(blob, url);\n    })\n  }\n\n  async function uploadImage(blob, url) {\n    setMintStatus(\"Uploading to web3.storage...\");\n    console.log(blob);\n    let web3StorageClient = new Web3Storage({token: WEB3_STORAGE_KEY});\n    let file = new File([blob], \"nft.png\");\n    console.log(file);\n    const rootCid = await web3StorageClient.put([file]);\n    console.log(rootCid);\n\n    let IPFS_URL = `https://ipfs.io/ipfs/${rootCid}/nft.png`\n    console.log(IPFS_URL);\n    await handleMint(url, IPFS_URL);\n  }\n\n  async function handleMint(domain, image_url) {\n    setMintStatus(\"Minting with NFTPort...\")\n    let data = {\n      \"chain\": \"polygon\",\n      \"name\": \"Noir - \" + domain,\n      \"description\": \"Minted via Noir for being a user of \" + domain,\n      \"file_url\": image_url,\n      \"mint_to_address\": myAddress\n    }\n\n    fetch(\"https://api.nftport.xyz/v0/mints/easy/urls\", {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": NFT_PORT_KEY,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json())\n    .then(data => {\n      console.log(data);\n      setMintStatus(\"Success!\");\n    });\n  }\n\n  window.onload = function() {\n    if (!passwordNeeded && localStorage.getItem(\"privateKey\") !== null) {\n      activateWallet(\"\");\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {settings && <div className=\"Settings\">\n        {localStorage.getItem(\"privateKey\") && <IoMdClose className=\"ClosePrivateKey Icon\"\n          onClick={() => {\n            reset();\n          }}/>}\n        <div className=\"Progress\" id=\"PrivateKeyProgress\"\n          style={{\n            width: progressWidth * 500 + \"px\"\n          }}></div>\n        <input className=\"SettingsInput\" id=\"PrivateKey\" type=\"text\" autoComplete=\"off\" placeholder=\"Private Key\"></input>\n        <input className=\"SettingsInput\" id=\"Password\" type=\"text\" autoComplete=\"off\" placeholder=\"Password\"></input>\n        <button className=\"Save SaveSettings\"\n          onClick={() => {\n            handlePrivateKey(document.getElementById(\"PrivateKey\").value, document.getElementById(\"Password\").value);\n          }}>Save</button>\n      </div>}\n\n      {passwordNeeded && <div className=\"InitialPassword\">\n          <div className=\"Progress\" id=\"PasswordProgress\"\n            style={{\n              width: progressWidth * 500 + \"px\"\n            }}></div>\n          <input className=\"SettingsInput\" id=\"InitialPassword\" type=\"text\" autoComplete=\"off\" placeholder=\"Password\"></input>\n          <button className=\"Save SavePassword\"\n            onClick={() => {\n              activateWallet(document.getElementById(\"InitialPassword\").value);\n            }}>Enter</button>\n      </div>}\n\n      {newConversationPopup && <div className=\"NewConversationPopup\">\n        <IoMdClose className=\"ClosePrivateKey Icon\"\n          onClick={() => {\n            reset();\n          }}/>\n        <input className=\"SettingsInput\" id=\"ToAddress\" type=\"text\" autoComplete=\"off\" placeholder=\"Message Recipient\"></input>\n        <input className=\"SettingsInput\" id=\"ToWebsite\" type=\"text\" autoComplete=\"off\" placeholder=\"Website (Optional)\"></input>\n        <button className=\"CurrentWebsite\"\n          onClick={() => {\n            // eslint-disable-next-line\n            chrome.tabs && chrome.tabs.query({active: true, currentWindow: true}, function(tabs) {\n                document.getElementById(\"ToWebsite\").value = isolateWebsite(tabs[0].url);\n            });\n          }}>Current</button>\n        <input className=\"SettingsInput\" id=\"ToMessage\" type=\"text\" autoComplete=\"off\" placeholder=\"Message\"></input>\n        <button className=\"Save SendMessage\"\n            onClick={() => {\n              sendMessage(\n                document.getElementById(\"ToAddress\").value,\n                document.getElementById(\"ToMessage\").value,\n                document.getElementById(\"ToWebsite\").value\n              );\n              reset();\n            }}>Send</button>\n      </div>}\n\n      {lookupPopup && <div className=\"LookupPopup\">\n        <IoMdClose className=\"ClosePrivateKey Icon\"\n          onClick={() => {\n            reset();\n          }}/>\n        <input className=\"SettingsInput\" id=\"SearchAddress\" type=\"text\" autoComplete=\"off\" placeholder=\"Enter address to search\"\n          onKeyPress={event => {\n            if (event.key === \"Enter\") {\n              try {\n                getNFTs(document.getElementById(\"SearchAddress\").value);\n              } catch(e) {\n                alert(e);\n              }\n            }\n          }}\n        ></input>\n        {!loadingNFTs ? (<div className=\"NFTs\">\n          {currentNFTs.map((nft, index) => \n            <div className=\"NFT\" key={index}\n              style={{\n                left: 20 + (index % 3) * 189 + \"px\",\n                top: 10 + Math.floor(index / 3) * 154 + \"px\"\n              }}\n            >\n              <img className=\"NFTImage\" src={nft.nft_data[0].external_data.image} alt={nft.nft_data[0].external_data.name}></img>\n              <span className=\"NFTText\">{nft.nft_data[0].external_data.name}</span>\n            </div>\n          )}\n        </div>) : (<div className=\"LoadingNFTs\">Loading...</div>)}\n      </div>}\n\n      {mintingNFTPopup && <div className=\"MintPopup\">\n        <IoMdClose className=\"ClosePrivateKey Icon\"\n          onClick={() => {\n            reset();\n          }}/>\n        <input className=\"SettingsInput\" id=\"CurrentWebsiteInput\" type=\"text\" placeholder=\"Enter full URL\"></input>\n        <button className=\"CurrentWebsite MintCurrentWebsite\"\n          onClick={() => {\n            // eslint-disable-next-line\n            chrome.tabs && chrome.tabs.query({active: true, currentWindow: true}, function(tabs) {\n              document.getElementById(\"CurrentWebsiteInput\").value = isolateWebsite(tabs[0].url);\n            });\n          }}>Current</button>\n        <button className=\"Save DisplayButton\" onClick={() => {\n          loadImage(false);\n        }}>Display</button>\n        <button className=\"Save MintButton\" onClick={() => {\n          loadImage(true);\n        }}>Mint</button>\n        <span className=\"MintStatus\">{mintStatus}</span>\n        <canvas className=\"NFTPreview\"></canvas>\n      </div>}\n\n      <div className=\"GlobalHeader\">\n        <span className=\"MyAddress\" title={myAddress}>{(myAddress && \"Logged in as \" + myAddress.substring(0,6) + \"...\" + myAddress.slice(-4)) || \"Loading...\"}</span>\n        <div className=\"NewConversation HeaderButton\" onClick={() => {\n          setNewConversationPopup(true);\n        }}>New Conversation</div>\n        <div className=\"LookupUser HeaderButton\" onClick={() => {\n          setLookupPopup(true);\n        }}>Lookup User</div>\n        <div className=\"MintNFT HeaderButton\" onClick={() => {\n          setMintingNFTPopup(true);\n        }}>Mint NFT</div>\n        <FiSettings className=\"OpenSettings Icon\"\n            onClick={() => {\n              setActiveLeft(2);\n              setSettings(true);\n            }}\n            style={{\n              color: activeLeft === 2 ? \"white\" : \"rgba(255,255,255,0.5)\"\n            }}/>\n      </div>\n\n      <div className=\"LeftNav\">\n        <div className=\"LeftNavHeader\">\n          <span className=\"LeftNavHeaderOption\">People</span>\n        </div>\n        {loadedPeople ? (<div>\n          {conversations.map((conversation, index) => \n            <div className=\"Option Person\" key={index}\n              onClick={() => {\n                loadMessageByPerson(conversation);\n              }}\n            >{conversation.peerAddress.substring(0,6) + \"...\" + conversation.peerAddress.slice(-4)}</div>\n          )}\n        </div>) : <div className=\"Option Person\">Loading...</div>}\n      </div>\n      <div className=\"MiddleNav\">\n        <span className=\"MiddleNavHeaderOption\">Sites</span>\n        {loadedSites && <div>\n          {Object.keys(sites).map((site, index) => \n            <div className=\"Option Site\" key={index}\n              onClick={() => {\n                displayMessages(site);\n              }}\n            >{site}</div>\n          )}\n        </div>}\n      </div>\n\n      <div className=\"RightNav\">\n        <div className=\"RightNavHeader\">\n          <span className=\"XMTPTitle\"><i>Powered by XMTP</i></span>\n        </div>\n        <div className=\"Messages\">\n          {loadedMessages && <div>\n            {activeMessages.map((message, index) => \n              <div className={message.includes(\"Me\") ? \"Message Right\" : \"Message Left\"} key={index} title={currentWebsite}>{message}</div>\n            )}  \n          </div>}\n        </div>\n\n        {loadedMessages && <input className=\"TextMessage\" type=\"text\" placeholder=\"Type your message\" autoComplete=\"off\"\n          onKeyPress={event => {\n            if (event.key === \"Enter\") {\n              console.log(event.target.value);\n              sendMessage(currentAddress, event.target.value, currentWebsite);\n              let newMessage = document.createElement(\"div\");\n              newMessage.classList.add(\"Message\");\n              newMessage.classList.add(\"Right\");\n              newMessage.innerHTML = \"Me - \" + event.target.value;\n              document.getElementsByClassName(\"Messages\")[0].appendChild(newMessage)\n              document.getElementsByClassName(\"TextMessage\")[0].value = \"\";\n            }\n          }}\n        ></input>}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  //React.StrictMode causes useEffect to be called twice\n  <App />\n);\n"],"sourceRoot":""}