"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const js_waku_1 = require("js-waku");
const utils_1 = require("../utils");
class NetworkStore {
    constructor(waku) {
        this.waku = waku;
    }
    // Returns the first record in a topic if it is present.
    get(key) {
        return __awaiter(this, void 0, void 0, function* () {
            const contents = (yield this.waku.store.queryHistory([(0, utils_1.buildUserPrivateStoreTopic)(key)], {
                pageSize: 1,
                pageDirection: js_waku_1.PageDirection.FORWARD,
                callback: function (msgs) {
                    return Boolean(msgs[0].payload);
                },
            }))
                .filter((msg) => msg.payload)
                .map((msg) => msg.payload);
            return contents.length > 0 ? Buffer.from(contents[0]) : null;
        });
    }
    set(key, value) {
        return __awaiter(this, void 0, void 0, function* () {
            const keys = Uint8Array.from(value);
            yield this.waku.lightPush.push(yield js_waku_1.WakuMessage.fromBytes(keys, this.buildTopic(key)));
        });
    }
    buildTopic(key) {
        return (0, utils_1.buildUserPrivateStoreTopic)(key);
    }
}
exports.default = NetworkStore;
//# sourceMappingURL=PrivateTopicStore.js.map