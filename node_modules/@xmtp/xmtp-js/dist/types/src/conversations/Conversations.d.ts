import Conversation from './Conversation';
import Stream from '../Stream';
import Client from '../Client';
/**
 * Conversations allows you to view ongoing 1:1 messaging sessions with another wallet
 */
export default class Conversations {
    private client;
    constructor(client: Client);
    /**
     * List all conversations with the current wallet found in the network, deduped by peer address
     */
    list(): Promise<Conversation[]>;
    /**
     * Returns a stream of any newly created conversations.
     * Will dedupe to not return the same conversation twice in the same stream.
     * Does not dedupe any other previously seen conversations
     */
    stream(): Promise<Stream<Conversation>>;
    /**
     * Creates a new conversation for the given address. Will throw an error if the peer is not found in the XMTP network
     */
    newConversation(peerAddress: string): Promise<Conversation>;
    private getPeerAddress;
}
