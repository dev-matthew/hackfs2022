import * as proto from '../../src/proto/messaging';
import Signature from './Signature';
import * as ethers from 'ethers';
export default class PublicKey implements proto.PublicKey {
    timestamp: number;
    secp256k1Uncompressed: proto.PublicKey_Secp256k1Uncompressed;
    signature?: Signature;
    constructor(obj: proto.PublicKey);
    generated(): Date | undefined;
    verify(signature: Signature, digest: Uint8Array): boolean;
    bytesToSign(): Uint8Array;
    identitySigRequestText(): string;
    verifyKey(pub: PublicKey): Promise<boolean>;
    signWithWallet(wallet: ethers.Signer): Promise<void>;
    walletSignatureAddress(): string;
    getEthereumAddress(): string;
    equals(other: PublicKey): boolean;
    toBytes(): Uint8Array;
    static fromBytes(bytes: Uint8Array): PublicKey;
}
