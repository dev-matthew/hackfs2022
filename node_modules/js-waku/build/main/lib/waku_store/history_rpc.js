"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HistoryRPC = exports.PageDirection = void 0;
const long_1 = __importDefault(require("long"));
const minimal_1 = require("protobufjs/minimal");
const uuid_1 = require("uuid");
const protoV2Beta3 = __importStar(require("../../proto/waku/v2/store/v2beta3/store"));
const protoV2Beta4 = __importStar(require("../../proto/waku/v2/store/v2beta4/store"));
const index_1 = require("./index");
var PageDirection;
(function (PageDirection) {
    PageDirection["BACKWARD"] = "backward";
    PageDirection["FORWARD"] = "forward";
})(PageDirection = exports.PageDirection || (exports.PageDirection = {}));
class HistoryRPC {
    constructor(proto, storeCodec) {
        this.proto = proto;
        this.storeCodec = storeCodec;
        switch (storeCodec) {
            case index_1.StoreCodecs.V2Beta3:
                this.protoCodec = protoV2Beta3;
                break;
            case index_1.StoreCodecs.V2Beta4:
                this.protoCodec = protoV2Beta4;
                break;
            default:
                throw `Internal Error: Unexpected store codec value received in constructor: ${storeCodec}`;
        }
    }
    get query() {
        return this.proto.query;
    }
    get response() {
        return this.proto.response;
    }
    /**
     * Create History Query.
     */
    static createQuery(params) {
        const storeCodec = params.storeCodec ?? index_1.StoreCodecs.V2Beta4;
        const contentFilters = params.contentTopics.map((contentTopic) => {
            return { contentTopic };
        });
        const direction = directionToProto(params.pageDirection);
        switch (storeCodec) {
            case index_1.StoreCodecs.V2Beta3:
                // Using function to scope variables
                return (() => {
                    const pagingInfo = {
                        pageSize: long_1.default.fromNumber(params.pageSize),
                        cursor: params.cursor,
                        direction,
                    };
                    let startTime, endTime;
                    if (params.startTime)
                        startTime = params.startTime.valueOf() / 1000;
                    if (params.endTime)
                        endTime = params.endTime.valueOf() / 1000;
                    return new HistoryRPC({
                        requestId: (0, uuid_1.v4)(),
                        query: {
                            pubSubTopic: params.pubSubTopic,
                            contentFilters,
                            pagingInfo,
                            startTime,
                            endTime,
                        },
                        response: undefined,
                    }, storeCodec);
                })();
            case index_1.StoreCodecs.V2Beta4:
                return (() => {
                    const pagingInfo = {
                        pageSize: long_1.default.fromNumber(params.pageSize),
                        cursor: params.cursor,
                        direction,
                    };
                    let startTime, endTime;
                    if (params.startTime) {
                        // milliseconds 10^-3 to nanoseconds 10^-9
                        startTime = long_1.default.fromNumber(params.startTime.valueOf()).mul(1000000);
                    }
                    if (params.endTime) {
                        // milliseconds 10^-3 to nanoseconds 10^-9
                        endTime = long_1.default.fromNumber(params.endTime.valueOf()).mul(1000000);
                    }
                    return new HistoryRPC({
                        requestId: (0, uuid_1.v4)(),
                        query: {
                            pubSubTopic: params.pubSubTopic,
                            contentFilters,
                            pagingInfo,
                            startTime,
                            endTime,
                        },
                        response: undefined,
                    }, storeCodec);
                })();
            default:
                throw `Internal Error: Unexpected store codec value received in createQuery: ${storeCodec}`;
        }
    }
    decode(bytes) {
        const res = this.protoCodec.HistoryRPC.decode(minimal_1.Reader.create(bytes));
        return new HistoryRPC(res, this.storeCodec);
    }
    encode() {
        return this.protoCodec.HistoryRPC.encode(this.proto).finish();
    }
}
exports.HistoryRPC = HistoryRPC;
function directionToProto(pageDirection) {
    switch (pageDirection) {
        case PageDirection.BACKWARD:
            return protoV2Beta4.PagingInfo_Direction.DIRECTION_BACKWARD_UNSPECIFIED;
        case PageDirection.FORWARD:
            return protoV2Beta4.PagingInfo_Direction.DIRECTION_FORWARD;
        default:
            return protoV2Beta4.PagingInfo_Direction.DIRECTION_BACKWARD_UNSPECIFIED;
    }
}
//# sourceMappingURL=history_rpc.js.map